-- Teleport ui box universal 📡📡📡✅✅

-- Configuration
local allowLocalPlayer = false -- Set to true to allow local player to trigger prompt, false to disable

local Players = game:GetService("Players")
local TextChatService = game:GetService("TextChatService")
local TweenService = game:GetService("TweenService")
local LocalPlayer = Players.LocalPlayer

local function createMessageBox(fromPlayer)
    -- Clean up existing GUI
    if LocalPlayer.PlayerGui:FindFirstChild("GoToPrompt") then
        LocalPlayer.PlayerGui.GoToPrompt:Destroy()
    end

    local gui = Instance.new("ScreenGui")  
    gui.Name = "GoToPrompt"  
    gui.ResetOnSpawn = false  
    gui.Parent = LocalPlayer.PlayerGui  
    gui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling  

    local frame = Instance.new("Frame")  
    frame.Size = UDim2.new(0, 100, 0, 80)  
    frame.Position = UDim2.new(0.5, 150, 0.22, 0) -- moved 150 pixels (5 cm) right  
    frame.AnchorPoint = Vector2.new(0.5, 0.5)  
    frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)  
    frame.BackgroundTransparency = 1  
    frame.BorderSizePixel = 0  
    frame.ClipsDescendants = true  
    frame.ZIndex = 10  
    frame.Parent = gui  

    local corner = Instance.new("UICorner")  
    corner.CornerRadius = UDim.new(0, 12)  
    corner.Parent = frame  

    local stroke = Instance.new("UIStroke")  
    stroke.Thickness = 2  
    stroke.Color = Color3.fromRGB(0, 0, 0)  
    stroke.Transparency = 0.7  
    stroke.Parent = frame  

    TweenService:Create(frame, TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.In), {  
        BackgroundTransparency = 0.3  
    }):Play()  

    local profileImage = Instance.new("ImageLabel")  
    profileImage.Size = UDim2.new(0, 40, 0, 40)  
    profileImage.Position = UDim2.new(0, 5, 0, 5)  
    profileImage.BackgroundTransparency = 1  
    profileImage.Image = Players:GetUserThumbnailAsync(fromPlayer.UserId, Enum.ThumbnailType.HeadShot, Enum.ThumbnailSize.Size100x100)  
    profileImage.ZIndex = 11  
    profileImage.Parent = frame  

    local nameLabel = Instance.new("TextLabel")  
    nameLabel.Text = "Go to " .. fromPlayer.DisplayName  
    nameLabel.Size = UDim2.new(1, -55, 0, 40)  
    nameLabel.Position = UDim2.new(0, 50, 0, 4)  
    nameLabel.TextColor3 = Color3.new(1, 1, 1)  
    nameLabel.BackgroundTransparency = 1  
    nameLabel.Font = Enum.Font.GothamBold  
    nameLabel.TextScaled = true  
    nameLabel.TextTruncate = Enum.TextTruncate.AtEnd  
    nameLabel.TextXAlignment = Enum.TextXAlignment.Left  
    nameLabel.TextYAlignment = Enum.TextYAlignment.Center  
    nameLabel.ZIndex = 11  
    nameLabel.Parent = frame  

    local cancelBtn = Instance.new("TextButton")  
    cancelBtn.Text = "❌"  
    cancelBtn.Size = UDim2.new(0, 26, 0, 26)  
    cancelBtn.Position = UDim2.new(0.5, -35, 0, 64)  
    cancelBtn.AnchorPoint = Vector2.new(0.5, 0.5)  
    cancelBtn.BackgroundTransparency = 1  
    cancelBtn.TextColor3 = Color3.fromRGB(255, 85, 85)  
    cancelBtn.Font = Enum.Font.GothamBold  
    cancelBtn.TextScaled = true  
    cancelBtn.ZIndex = 11  
    cancelBtn.Parent = frame  

    local cancelCorner = Instance.new("UICorner")  
    cancelCorner.CornerRadius = UDim.new(0, 8)  
    cancelCorner.Parent = cancelBtn  

    local cancelStroke = Instance.new("UIStroke")  
    cancelStroke.Thickness = 1  
    cancelStroke.Color = Color3.fromRGB(255, 85, 85)  
    cancelStroke.Transparency = 0.2  
    cancelStroke.Parent = cancelBtn  

    local confirmBtn = Instance.new("TextButton")  
    confirmBtn.Text = "✅"  
    confirmBtn.Size = UDim2.new(0, 26, 0, 26)  
    confirmBtn.Position = UDim2.new(0.5, 35, 0, 64)  
    confirmBtn.AnchorPoint = Vector2.new(0.5, 0.5)  
    confirmBtn.BackgroundTransparency = 1  
    confirmBtn.TextColor3 = Color3.fromRGB(85, 255, 85)  
    confirmBtn.Font = Enum.Font.GothamBold  
    confirmBtn.TextScaled = true  
    confirmBtn.ZIndex = 11  
    confirmBtn.Parent = frame  

    local confirmCorner = Instance.new("UICorner")  
    confirmCorner.CornerRadius = UDim.new(0, 8)  
    confirmCorner.Parent = confirmBtn  

    local confirmStroke = Instance.new("UIStroke")  
    confirmStroke.Thickness = 1  
    confirmStroke.Color = Color3.fromRGB(85, 255, 85)  
    confirmStroke.Transparency = 0.2  
    confirmStroke.Parent = confirmBtn  

    local function cleanUp()  
        if gui and gui.Parent then  
            gui:Destroy()  
        end  
    end  

    confirmBtn.MouseButton1Click:Connect(function()  
        local targetChar = fromPlayer.Character  
        local myChar = LocalPlayer.Character  
        if targetChar and targetChar:FindFirstChild("HumanoidRootPart") and myChar and myChar:FindFirstChild("HumanoidRootPart") then  
            local targetRoot = targetChar.HumanoidRootPart  
            myChar:MoveTo(targetRoot.Position + Vector3.new(2, 0, 2))  
        else
            warn("Teleport failed: Character or HumanoidRootPart not found")
        end
        cleanUp()  
    end)  

    cancelBtn.MouseButton1Click:Connect(cleanUp)  

    task.spawn(function()  
        task.wait(10)  
        cleanUp()  
    end)
end

-- Set up chat listener for a specific player
local function setupChatListener()
    TextChatService.OnIncomingMessage = function(message)
        if message.TextSource and message.Text then
            local fromPlayer = Players:GetPlayerByUserId(message.TextSource.UserId)
            local msg = message.Text:lower()
            if fromPlayer and (string.find(msg, "comee") or string.find(msg, "heree")) then
                if allowLocalPlayer or fromPlayer ~= LocalPlayer then
                    createMessageBox(fromPlayer)
                end
            end
        end
    end
end

-- Handle new players joining
Players.PlayerAdded:Connect(function(player)
    if player == LocalPlayer then
        setupChatListener()
    end
end)

-- Handle local player respawn
LocalPlayer.CharacterAdded:Connect(function()
    -- Clean up any existing GUI on respawn
    if LocalPlayer.PlayerGui:FindFirstChild("GoToPrompt") then
        LocalPlayer.PlayerGui.GoToPrompt:Destroy()
    end
    -- Rebind chat listener
    setupChatListener()
end)

-- Initial setup for the local player
setupChatListener()

    



--Auto water Gag⛵
if game.PlaceId ~= 126884695634066 then return end
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()

-- UI Setup
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "WaterToggleUI"
screenGui.ResetOnSpawn = false
screenGui.Parent = player:WaitForChild("PlayerGui")

-- State
local toggled = false
local lockPos = nil
local radius = 4
local speed = 0.7
local yFixed = 0.20 -- final fixed watering height
local angles = {0, 60, 120, 180, 240, 300}
local index = 1
local baseY = 270
local uiX = 2

-- Toggle Button (Water)
local toggleButton = Instance.new("TextButton")
toggleButton.Size = UDim2.new(0, 50, 0, 20)
toggleButton.Position = UDim2.new(0, uiX, 0, baseY)
toggleButton.BackgroundColor3 = Color3.fromRGB(180, 180, 180)
toggleButton.Text = "Water"
toggleButton.TextSize = 12
toggleButton.Parent = screenGui

-- Lock Button
local lockButton = Instance.new("TextButton")
lockButton.Size = UDim2.new(0, 50, 0, 18)
lockButton.Position = UDim2.new(0, uiX, 0, baseY - 22)
lockButton.BackgroundColor3 = Color3.fromRGB(180, 180, 180)
lockButton.Text = "Lock"
lockButton.TextSize = 11
lockButton.Parent = screenGui

local lockEnabled = false
lockButton.MouseButton1Click:Connect(function()
	lockEnabled = not lockEnabled
	if lockEnabled and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
		lockPos = player.Character.HumanoidRootPart.Position
	end
	lockButton.BackgroundColor3 = lockEnabled and Color3.fromRGB(100, 255, 100) or Color3.fromRGB(180, 180, 180)
end)

-- Radius Box
local radiusBox = Instance.new("TextBox")
radiusBox.Size = UDim2.new(0, 45, 0, 20)
radiusBox.Position = UDim2.new(0, uiX + 55, 0, baseY)
radiusBox.BackgroundColor3 = Color3.fromRGB(255, 100, 100)
radiusBox.Text = tostring(radius)
radiusBox.TextSize = 12
radiusBox.ClearTextOnFocus = false
radiusBox.Parent = screenGui

-- Speed Box
local speedBox = Instance.new("TextBox")
speedBox.Size = UDim2.new(0, 45, 0, 20)
speedBox.Position = UDim2.new(0, uiX + 105, 0, baseY)
speedBox.BackgroundColor3 = Color3.fromRGB(100, 150, 255)
speedBox.Text = tostring(speed)
speedBox.TextSize = 12
speedBox.ClearTextOnFocus = false
speedBox.Parent = screenGui

radiusBox.FocusLost:Connect(function()
	local val = tonumber(radiusBox.Text)
	if val then radius = val end
end)

speedBox.FocusLost:Connect(function()
	local val = tonumber(speedBox.Text)
	if val and val > 0 then speed = val end
end)

toggleButton.MouseButton1Click:Connect(function()
	toggled = not toggled
	toggleButton.BackgroundColor3 = toggled and Color3.fromRGB(100, 255, 100) or Color3.fromRGB(180, 180, 180)
end)

-- Auto Equip Watering Can
local function autoEquipWateringCan()
	local backpack = player:FindFirstChild("Backpack")
	local character = player.Character
	if not (backpack and character) then return end

	local equipped = character:FindFirstChildOfClass("Tool")
	if equipped and equipped.Name:lower():find("watering can") then return end

	for _, tool in ipairs(backpack:GetChildren()) do
		if tool:IsA("Tool") and tool.Name:lower():find("watering can") then
			tool.Parent = character
			break
		end
	end
end

-- Fire Loop
local waterRE = ReplicatedStorage:WaitForChild("GameEvents"):WaitForChild("Water_RE")

task.spawn(function()
	while true do
		if toggled then
			local root = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
			if root then
				autoEquipWateringCan()

				local origin = lockEnabled and lockPos or root.Position
				local angleRad = math.rad(angles[index])
				index = index % #angles + 1

				local offset = Vector3.new(
					math.cos(angleRad) * radius,
					0,
					math.sin(angleRad) * radius
				)

				local firePos = Vector3.new(origin.X + offset.X, yFixed, origin.Z + offset.Z)
				waterRE:FireServer(firePos)
			end
		end
		task.wait(1 / speed)
	end
end)




-- Ping 🛜 
if game.PlaceId ~= 126884695634066 then return end

-- Place this in StarterPlayerScripts or execute as a LocalScript

local Players = game:GetService("Players")
local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

-- Create GUI
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "PingUI"
screenGui.ResetOnSpawn = false
screenGui.IgnoreGuiInset = true -- Removes top bar offset
screenGui.Parent = playerGui

-- Create compact label
local label = Instance.new("TextLabel")
label.Size = UDim2.new(0, 65, 0, 18) -- Smaller size
label.Position = UDim2.new(1, -68, 1, -20) -- Bottom-right corner, flush with edge
label.BackgroundTransparency = 1
label.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
label.TextColor3 = Color3.fromRGB(255, 255, 255)
label.Font = Enum.Font.Code
label.TextSize = 10
label.Text = "Ping: --"
label.BorderSizePixel = 0
label.Parent = screenGui

-- Fast ping updater
task.spawn(function()
	while true do
		local ping = player:GetNetworkPing()
		if ping then
			label.Text = "Ping: " .. math.floor(ping * 1000)
		end
		task.wait(0.25)
	end
end)




-- Disable collect 👍🏻

if game.PlaceId ~= 126884695634066 then return end

local Players = game:GetService("Players")
local localPlayer = Players.LocalPlayer
local playerGui = localPlayer:WaitForChild("PlayerGui")

local isToggled = false
local countdownRunning = true

-- UI Setup
local gui = Instance.new("ScreenGui")
gui.Name = "ProximityToggleUI"
gui.ZIndexBehavior = Enum.ZIndexBehavior.Global
gui.ResetOnSpawn = false
gui.Parent = playerGui

local toggle = Instance.new("TextButton")
toggle.Name = "ToggleButton"
toggle.Size = UDim2.new(0, 40, 0, 20)
toggle.Position = UDim2.new(0, 572, 0, -52) -- Fixed permanent position
toggle.BackgroundColor3 = Color3.fromRGB(200, 200, 200)
toggle.Text = "5"
toggle.TextColor3 = Color3.new(1, 1, 1)
toggle.TextScaled = true
toggle.Font = Enum.Font.SourceSansBold
toggle.Active = true
toggle.AutoButtonColor = true
toggle.Parent = gui

-- Update proximity prompts
local function updateAllPrompts()
	local farm = workspace:FindFirstChild("Farm")
	if not farm then return end

	for _, folder in pairs(farm:GetChildren()) do
		if folder:IsA("Folder") then
			local sign = folder:FindFirstChild("Sign", true)
			if sign and sign:GetAttribute("_owner") == localPlayer.Name then
				local plants = folder:FindFirstChild("Important") and folder.Important:FindFirstChild("Plants_Physical")
				if plants then
					for _, model in pairs(plants:GetChildren()) do
						local fruits = {}
						local root = model:FindFirstChild("Fruits")
						if root and #root:GetChildren() > 0 then
							fruits = root:GetChildren()
						elseif model:FindFirstChild("Weight", true) then
							table.insert(fruits, model)
						end
						for _, fruit in pairs(fruits) do
							for _, p in pairs(fruit:GetDescendants()) do
								if p:IsA("ProximityPrompt") then
									p.MaxActivationDistance = isToggled and 0 or 10
								end
							end
						end
					end
				end
			end
		end
	end
end

-- Detect new ProximityPrompts safely (only under your plants)
workspace.DescendantAdded:Connect(function(descendant)
	if not isToggled or not descendant:IsA("ProximityPrompt") then return end

	local parentModel = descendant:FindFirstAncestorWhichIsA("Model")
	if not parentModel then return end

	local farm = workspace:FindFirstChild("Farm")
	if not farm then return end

	for _, folder in pairs(farm:GetChildren()) do
		if folder:IsA("Folder") then
			local sign = folder:FindFirstChild("Sign", true)
			if sign and sign:GetAttribute("_owner") == localPlayer.Name then
				local plants = folder:FindFirstChild("Important") and folder.Important:FindFirstChild("Plants_Physical")
				if plants and plants:IsAncestorOf(parentModel) then
					descendant.MaxActivationDistance = 0
					break
				end
			end
		end
	end
end)

-- Toggle logic
local function updateToggleState()
	if countdownRunning then return end
	isToggled = not isToggled
	toggle.Text = isToggled and "ON" or "OFF"
	toggle.BackgroundColor3 = isToggled and Color3.fromRGB(100, 200, 100) or Color3.fromRGB(200, 200, 200)
	updateAllPrompts()
end

-- Manual toggle
toggle.Activated:Connect(function()
	if countdownRunning then
		countdownRunning = false
		toggle.Text = "OFF"
	end
	updateToggleState()
end)

-- 5-second countdown start
task.spawn(function()
	for i = 5, 1, -1 do
		if not countdownRunning then return end
		toggle.Text = tostring(i)
		task.wait(1)
	end
	if countdownRunning then
		countdownRunning = false
		isToggled = false
		updateToggleState()
	end
end)








--Gear teleport button ✅
-- Place this script in your executor as a LocalScript

if game.PlaceId ~= 126884695634066 then return end

local Players = game:GetService("Players")
local player = Players.LocalPlayer

-- Create a ScreenGui to hold the buttons
local screenGui = Instance.new("ScreenGui")
screenGui.Parent = player:WaitForChild("PlayerGui")
screenGui.Name = "TeleportButtonGui"

-- Gear Button
local gearButton = Instance.new("TextButton")
gearButton.Parent = screenGui
gearButton.Name = "TeleportButton"
gearButton.Text = "Gear"
gearButton.BackgroundColor3 = Color3.fromRGB(75, 0, 130) -- Dark purple color
gearButton.Size = UDim2.new(0, 60, 0, 20)
gearButton.Position = UDim2.new(0, 481, 0, -52)
gearButton.TextColor3 = Color3.fromRGB(255, 255, 255)
gearButton.Font = Enum.Font.SourceSansBold
gearButton.TextScaled = true
gearButton.TextWrapped = true

local gearTargetCFrame = CFrame.new(-285, 3, -14)

gearButton.MouseButton1Click:Connect(function()
    local character = player.Character
    if character and character:FindFirstChild("HumanoidRootPart") then
        character.HumanoidRootPart.CFrame = gearTargetCFrame
    end
end)

-- Event Button
local eventButton = Instance.new("TextButton")
eventButton.Parent = screenGui
eventButton.Name = "EventButton"
eventButton.Text = "Event"
eventButton.BackgroundColor3 = Color3.fromRGB(120, 160, 120) -- Soft greyish green
eventButton.Size = UDim2.new(0, 60, 0, 20)
eventButton.Position = UDim2.new(0, 179, 0, 9)
eventButton.TextColor3 = Color3.fromRGB(255, 255, 255)
eventButton.Font = Enum.Font.SourceSansBold
eventButton.TextScaled = true
eventButton.TextWrapped = true

local eventTargetCFrame = CFrame.new(-56, 5, -17)

eventButton.MouseButton1Click:Connect(function()
    local character = player.Character
    if character and character:FindFirstChild("HumanoidRootPart") then
        character.HumanoidRootPart.CFrame = eventTargetCFrame
    end
end)



-- Recipe 📝 pig event 
if game.PlaceId ~= 126884695634066 then return end

local Players = game:GetService("Players")
local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

local screenGui = Instance.new("ScreenGui")
screenGui.Name = "PrismaticRecipeGUI"
screenGui.ResetOnSpawn = false
screenGui.IgnoreGuiInset = false
screenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
screenGui.DisplayOrder = 1000
screenGui.Parent = playerGui

-- Toggle button (smaller, moved 150px left, 10px up from bottom edge, anchored bottom-right)
local toggleButton = Instance.new("TextButton")
toggleButton.Size = UDim2.new(0, 70, 0, 24)
toggleButton.Position = UDim2.new(1, -150, 1, -10)
toggleButton.AnchorPoint = Vector2.new(1, 1)
toggleButton.Text = "📜 Recipe"
toggleButton.BackgroundColor3 = Color3.fromRGB(150, 150, 150)
toggleButton.BackgroundTransparency = 0.3
toggleButton.TextColor3 = Color3.fromRGB(0, 0, 0)
toggleButton.TextSize = 14
toggleButton.Font = Enum.Font.GothamBold
toggleButton.BorderSizePixel = 1
toggleButton.ZIndex = 10
toggleButton.Parent = screenGui

-- Recipe frame (smaller, darker grey)
local recipeFrame = Instance.new("Frame")
recipeFrame.Size = UDim2.new(0, 280, 0, 280)
recipeFrame.Position = UDim2.new(0.5, -140, 0.5, -140)
recipeFrame.BackgroundColor3 = Color3.fromRGB(200, 200, 200)
recipeFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
recipeFrame.Visible = false
recipeFrame.ZIndex = 10
recipeFrame.Parent = screenGui

-- Heading
local heading = Instance.new("TextLabel")
heading.Size = UDim2.new(1, -40, 0, 28)
heading.Position = UDim2.new(0, 10, 0, 5)
heading.BackgroundTransparency = 1
heading.Text = "🌈 Prismatic Recipes"
heading.TextColor3 = Color3.fromRGB(30, 30, 30)
heading.Font = Enum.Font.GothamBold
heading.TextSize = 18
heading.TextXAlignment = Enum.TextXAlignment.Left
heading.ZIndex = 10
heading.Parent = recipeFrame

-- Close button
local closeButton = Instance.new("TextButton")
closeButton.Size = UDim2.new(0, 26, 0, 26)
closeButton.Position = UDim2.new(1, -31, 0, 5)
closeButton.Text = "❌"
closeButton.BackgroundColor3 = Color3.fromRGB(255, 100, 100)
closeButton.TextColor3 = Color3.new(1, 1, 1)
closeButton.Font = Enum.Font.GothamBold
closeButton.TextSize = 14
closeButton.ZIndex = 10
closeButton.Parent = recipeFrame

-- Scrollable area
local scrollingFrame = Instance.new("ScrollingFrame")
scrollingFrame.Size = UDim2.new(1, -20, 1, -45)
scrollingFrame.Position = UDim2.new(0, 10, 0, 40)
scrollingFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
scrollingFrame.ScrollBarThickness = 6
scrollingFrame.BackgroundTransparency = 1
scrollingFrame.AutomaticCanvasSize = Enum.AutomaticSize.Y
scrollingFrame.VerticalScrollBarInset = Enum.ScrollBarInset.Always
scrollingFrame.ClipsDescendants = true
scrollingFrame.ZIndex = 10
scrollingFrame.Parent = recipeFrame

-- Recipe data
local recipes = {
	["🍰 Prismatic Cake"] = {
		"1 Recipe - 1x Banana + 4x Bone Blossom"
	},
	["🌭 Prismatic Hotdog"] = {
		"1 Recipe - 1x Corn + 4x Bone Blossom"
	},
	["🥗 Prismatic Salad"] = {
		"1 Recipe - 1x Tomato + 4x Bone Blossom"
	},
	["🍩 Prismatic Donut"] = {
		"1 Recipe - 1x Sugar Glaze + 4x Bone Blossom"
	},
	["🥧 Prismatic Pie"] = {
		"1 Recipe - 1x Pumpkin + 4x Bone Blossom"
	},
	["🍦 Prismatic Ice Cream"] = {
		"1 Recipe - 1x Banana + 1x Sugar Apple + 3x Bone Blossom"
	},
	["🍕 Prismatic Pizza"] = {
		"1 Recipe - 1x Sugar Apple + 1x Violet Corn + 3x Bone Blossom"
	},
	["🧇 Prismatic Waffle"] = {
		"1 Recipe - 1x Sugar Glaze + 4x Bone Blossom",
		"2 Recipe - 1x Sugar Apple + 1x Coconut + 3x Bone Blossom"
	},
	["🍣 Prismatic Sushi"] = {
		"1 Recipe - 1x Bamboo + 4x Bone Blossom",
		"2 Recipe - 1x Coconut + 4x Bone Blossom"
	},
	["🍔 Prismatic Burger"] = {
		"1 Recipe - 1x Violet Corn + 1x Tomato + 3x Bone Blossom"
	}
}

-- Populate scrolling list
local function populateRecipes()
	scrollingFrame:ClearAllChildren()

	local layout = Instance.new("UIListLayout")
	layout.SortOrder = Enum.SortOrder.LayoutOrder
	layout.Padding = UDim.new(0, 6)
	layout.Parent = scrollingFrame

	for foodName, recipeList in pairs(recipes) do
		local title = Instance.new("TextLabel")
		title.Size = UDim2.new(1, 0, 0, 0)
		title.AutomaticSize = Enum.AutomaticSize.Y
		title.BackgroundTransparency = 1
		title.Text = foodName
		title.TextColor3 = Color3.fromRGB(30, 30, 30)
		title.Font = Enum.Font.GothamBold
		title.TextSize = 17
		title.TextXAlignment = Enum.TextXAlignment.Left
		title.TextWrapped = true
		title.ZIndex = 10
		title.Parent = scrollingFrame

		for _, recipe in ipairs(recipeList) do
			-- Create a frame to hold the recipe text and copy button
			local recipeFrame = Instance.new("Frame")
			recipeFrame.Size = UDim2.new(1, 0, 0, 0)
			recipeFrame.AutomaticSize = Enum.AutomaticSize.Y
			recipeFrame.BackgroundTransparency = 1
			recipeFrame.ZIndex = 10
			recipeFrame.Parent = scrollingFrame

			local recipeLayout = Instance.new("UIListLayout")
			recipeLayout.SortOrder = Enum.SortOrder.LayoutOrder
			recipeLayout.FillDirection = Enum.FillDirection.Horizontal
			recipeLayout.Padding = UDim.new(0, 5)
			recipeLayout.Parent = recipeFrame

			local entry = Instance.new("TextLabel")
			entry.Size = UDim2.new(1, -50, 0, 0)
			entry.AutomaticSize = Enum.AutomaticSize.Y
			entry.BackgroundTransparency = 1
			entry.Text = "    " .. recipe
			entry.TextColor3 = Color3.fromRGB(60, 60, 60)
			entry.Font = Enum.Font.Gotham
			entry.TextSize = 14
			entry.TextXAlignment = Enum.TextXAlignment.Left
			entry.TextWrapped = true
			entry.TextYAlignment = Enum.TextYAlignment.Top
			entry.ZIndex = 11
			entry.Parent = recipeFrame

			local copyButton = Instance.new("TextButton")
			copyButton.Size = UDim2.new(0, 40, 0, 20)
			copyButton.Text = "Copy"
			copyButton.BackgroundColor3 = Color3.fromRGB(100, 100, 255)
			copyButton.TextColor3 = Color3.fromRGB(255, 255, 255)
			copyButton.Font = Enum.Font.Gotham
			copyButton.TextSize = 12
			copyButton.ZIndex = 11
			copyButton.Parent = recipeFrame

			-- Connect copy button to setclipboard with reformatted recipe name
			copyButton.MouseButton1Click:Connect(function()
				local cleanRecipe = string.gsub(recipe, "^%d+ Recipe %- ", "")
				local emoji, name = string.match(foodName, "^(%S+)%s*(.+)$")
				local formattedName = name .. " " .. emoji
				setclipboard(formattedName .. " - " .. cleanRecipe)
			end)
		end
	end
end

-- Toggle & close
toggleButton.MouseButton1Click:Connect(function()
	recipeFrame.Visible = not recipeFrame.Visible
end)

closeButton.MouseButton1Click:Connect(function()
	recipeFrame.Visible = false
end)

-- Load
populateRecipes()







-- Pet finder of other players 🔍🧐
if game.PlaceId ~= 126884695634066 then return end
 
local Players = game:GetService("Players")
local HttpService = game:GetService("HttpService")
local UserInputService = game:GetService("UserInputService")
 
local player = Players.LocalPlayer
 
-- Configuration
local SAVE_FILE = "pet_finder_pos.txt"
 
-- Default data (only used for MainFrame now)
local appData = {
    mainFramePos = {X = {Scale = 0, Offset = 70}, Y = {Scale = 0, Offset = 10}}
}
 
-- UI Setup
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "PetFinderUI"
screenGui.Parent = player:WaitForChild("PlayerGui")
 
local toggleBtn = Instance.new("TextButton")
toggleBtn.Name = "ToggleButton"
toggleBtn.Text = "🐶"
toggleBtn.Size = UDim2.new(0, 50, 0, 30)
toggleBtn.Position = UDim2.new(0, 2, 0, 213)
toggleBtn.BackgroundColor3 = Color3.fromRGB(144, 170, 144)
toggleBtn.TextColor3 = Color3.new(1, 1, 1)
toggleBtn.Font = Enum.Font.SourceSansBold
toggleBtn.TextSize = 14
toggleBtn.Parent = screenGui
 
local mainFrame = Instance.new("Frame")
mainFrame.Name = "MainFrame"
mainFrame.Size = UDim2.new(0, 250, 0, 300)
mainFrame.Position = UDim2.new(appData.mainFramePos.X.Scale, appData.mainFramePos.X.Offset, appData.mainFramePos.Y.Scale, appData.mainFramePos.Y.Offset)
mainFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
mainFrame.BackgroundTransparency = 0.2
mainFrame.Visible = false
mainFrame.Parent = screenGui
 
local searchBox = Instance.new("TextBox")
searchBox.Name = "SearchBox"
searchBox.Size = UDim2.new(0, 110, 0, 25)
searchBox.Position = UDim2.new(0, 10, 0, 10)
searchBox.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
searchBox.TextColor3 = Color3.new(1, 1, 1)
searchBox.Font = Enum.Font.SourceSans
searchBox.TextSize = 14
searchBox.PlaceholderText = "Search Pets..."
searchBox.Text = ""
searchBox.Parent = mainFrame
 
local ageSearchBox = Instance.new("TextBox")
ageSearchBox.Name = "AgeSearchBox"
ageSearchBox.Size = UDim2.new(0, 110, 0, 25)
ageSearchBox.Position = UDim2.new(0, 130, 0, 10)
ageSearchBox.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
ageSearchBox.TextColor3 = Color3.new(1, 1, 1)
ageSearchBox.Font = Enum.Font.SourceSans
ageSearchBox.TextSize = 14
ageSearchBox.PlaceholderText = "Search Age..."
ageSearchBox.Text = ""
ageSearchBox.Parent = mainFrame
 
local scrollingFrame = Instance.new("ScrollingFrame")
scrollingFrame.Name = "PetList"
scrollingFrame.Size = UDim2.new(0, 230, 0, 255)
scrollingFrame.Position = UDim2.new(0, 10, 0, 45)
scrollingFrame.BackgroundTransparency = 1
scrollingFrame.ScrollBarThickness = 5
scrollingFrame.Parent = mainFrame
 
-- Save / Load
local function saveData()
    local success, json = pcall(function()
        return HttpService:JSONEncode({
            mainFramePos = appData.mainFramePos
        })
    end)
    if success then
        pcall(function()
            writefile(SAVE_FILE, json)
        end)
    end
end
 
local function loadData()
    local success, data = pcall(function()
        if isfile(SAVE_FILE) then
            return HttpService:JSONDecode(readfile(SAVE_FILE))
        end
    end)
    if success and data then
        if data.mainFramePos and data.mainFramePos.X and data.mainFramePos.Y then
            appData.mainFramePos = data.mainFramePos
            mainFrame.Position = UDim2.new(
                data.mainFramePos.X.Scale or 0,
                data.mainFramePos.X.Offset or 70,
                data.mainFramePos.Y.Scale or 0,
                data.mainFramePos.Y.Offset or 10
            )
        end
    end
end
 
-- Dragging Logic (only for mainFrame)
local function makeDraggable(frame)
    local dragging, dragInput, startPos, startFramePos
    frame.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            startPos = input.Position
            startFramePos = frame.Position
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                    if frame == mainFrame then
                        appData.mainFramePos = {
                            X = {Scale = frame.Position.X.Scale, Offset = frame.Position.X.Offset},
                            Y = {Scale = frame.Position.Y.Scale, Offset = frame.Position.Y.Offset}
                        }
                        saveData()
                    end
                end
            end)
        end
    end)
    frame.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
            dragInput = input
        end
    end)
    UserInputService.InputChanged:Connect(function(input)
        if input == dragInput and dragging then
            local delta = input.Position - startPos
            frame.Position = UDim2.new(
                startFramePos.X.Scale,
                startFramePos.X.Offset + delta.X,
                startFramePos.Y.Scale,
                startFramePos.Y.Offset + delta.Y
            )
        end
    end)
end
 
-- Pet Info
local function extractAge(petName)
    local age = petName:match("%[Age (%d+)%]")
    return age and tonumber(age) or nil
end
 
local function getServerPets()
    local pets = {}
    for _, p in ipairs(Players:GetPlayers()) do
        if p ~= player then
            local backpack = p:FindFirstChild("Backpack")
            if backpack then
                for _, tool in ipairs(backpack:GetChildren()) do
                    if tool:IsA("Tool") and tool:GetAttribute("PET_UUID") then
                        table.insert(pets, {
                            name = tool.Name,
                            uuid = tool:GetAttribute("PET_UUID"),
                            owner = p.Name
                        })
                    end
                end
            end
        end
    end
    return pets
end
 
-- UI Update
local function updatePetList()
    scrollingFrame:ClearAllChildren()
    local nameSearchText = searchBox.Text:lower()
    local ageSearchText = ageSearchBox.Text
    local serverPets = getServerPets()
    local displayList = {}
 
    if nameSearchText == "" and ageSearchText == "" then
        local playerPets = {}
        for _, p in ipairs(Players:GetPlayers()) do
            if p ~= player then
                playerPets[p.Name] = {}
            end
        end
        for _, pet in ipairs(serverPets) do
            if playerPets[pet.owner] then
                table.insert(playerPets[pet.owner], pet)
            end
        end
        for playerName, pets in pairs(playerPets) do
            if #pets > 0 then
                table.insert(displayList, {type = "player", name = playerName})
                for _, pet in ipairs(pets) do
                    table.insert(displayList, {type = "pet", name = pet.name, owner = pet.owner})
                end
            end
        end
    elseif ageSearchText ~= "" then
        local ageSearch = tonumber(ageSearchText)
        if ageSearch then
            local petsWithDiff = {}
            for _, pet in ipairs(serverPets) do
                local petAge = extractAge(pet.name)
                if petAge then
                    table.insert(petsWithDiff, {
                        pet = {type = "pet", name = pet.name, owner = pet.owner},
                        diff = math.abs(petAge - ageSearch)
                    })
                end
            end
            table.sort(petsWithDiff, function(a, b) return a.diff < b.diff end)
            for _, entry in ipairs(petsWithDiff) do
                table.insert(displayList, entry.pet)
            end
        end
    else
        for _, pet in ipairs(serverPets) do
            if pet.name:lower():find(nameSearchText) then
                table.insert(displayList, {type = "pet", name = pet.name, owner = pet.owner})
            end
        end
    end
 
    local yOffset = 0
    for _, item in ipairs(displayList) do
        local textLabel = Instance.new("TextLabel")
        textLabel.Size = UDim2.new(0, 230, 0, 40)
        textLabel.Position = UDim2.new(0, 10, 0, yOffset)
        textLabel.BackgroundColor3 = item.type == "player" and Color3.fromRGB(80, 80, 80) or Color3.fromRGB(60, 60, 60)
        textLabel.TextColor3 = Color3.new(1, 1, 1)
        textLabel.Font = Enum.Font.SourceSans
        textLabel.TextSize = 14
        textLabel.TextXAlignment = Enum.TextXAlignment.Left
        textLabel.TextYAlignment = Enum.TextYAlignment.Top
        textLabel.TextWrapped = true
        textLabel.Text = item.type == "player" and item.name or (item.owner .. "\n  - " .. item.name)
        textLabel.Parent = scrollingFrame
        yOffset = yOffset + 45
    end
    scrollingFrame.CanvasSize = UDim2.new(0, 0, 0, yOffset)
end
 
-- Connections
toggleBtn.MouseButton1Click:Connect(function()
    mainFrame.Visible = not mainFrame.Visible
end)
 
searchBox:GetPropertyChangedSignal("Text"):Connect(updatePetList)
ageSearchBox:GetPropertyChangedSignal("Text"):Connect(updatePetList)
Players.PlayerAdded:Connect(updatePetList)
Players.PlayerRemoving:Connect(updatePetList)
 
-- Initialize
loadData()
makeDraggable(mainFrame)
updatePetList()


